version: '3.0'

services:
  voter-api-gateway:
    image: garystafford/voter-api-gateway:latest
    depends_on:
    - voter
    - candidate
    hostname: voter-lb
    ports:
    - "8080:8080/tcp"
    networks:
    - demo_overlay_net
    logging:
      driver: fluentd
      options:
        tag: docker.{{.Name}}
        fluentd-address: localhost:24224
        labels: com.voter.environment,com.voter.active_profile
        env: SERVICE_NAME,SERVICE_TAGS
    labels:
      com.voter.environment: ${ENVIRONMENT}
      com.voter.active_profile: ${ACTIVE_PROFILE}
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.hostname == worker2
    environment:
    - "CONSUL_SERVER_URL=${CONSUL_SERVER}"
    - "SERVICE_NAME=voter-api-gateway"
    - "SERVICE_TAGS=api gateway"

  candidate:
    image: garystafford/candidate-service:rabbitmq
    depends_on:
    - mongodb
    - rabbitmq
    hostname: candidate
    ports:
    - 8097:8097/tcp
    networks:
    - demo_overlay_net
    logging:
      driver: fluentd
      options:
        tag: docker.{{.Name}}
        fluentd-address: localhost:24224
        labels: com.voter.environment,com.voter.active_profile
        env: SERVICE_NAME,SERVICE_TAGS
    labels:
      com.voter.environment: ${ENVIRONMENT}
      com.voter.active_profile: ${ACTIVE_PROFILE}
    deploy:
      mode: global
      placement:
        constraints:
        - node.role == worker
    environment:
    - "CONSUL_SERVER_URL=${CONSUL_SERVER}"
    - "SERVICE_NAME=candidate"
    - "SERVICE_TAGS=service"
    command: "java -Dspring.profiles.active=${ACTIVE_PROFILE} \
      -Dlogging.level.root=DEBUG \
      -Dserver.context-path=/candidate
      -Djava.security.egd=file:/dev/./urandom \
      -jar candidate/candidate-service.jar"

  voter:
    image: garystafford/voter-service:rabbitmq
    depends_on:
    - mongodb
    - rabbitmq
    hostname: voter
    ports:
    - 8099:8099/tcp
    networks:
    - demo_overlay_net
    logging:
      driver: fluentd
      options:
        tag: docker.{{.Name}}
        fluentd-address: localhost:24224
        labels: com.voter.environment,com.voter.active_profile
        env: SERVICE_NAME,SERVICE_TAGS
    labels:
      com.voter.environment: ${ENVIRONMENT}
      com.voter.active_profile: ${ACTIVE_PROFILE}
    deploy:
      mode: global
      placement:
        constraints:
        - node.role == worker
    environment:
    - "CONSUL_SERVER_URL=${CONSUL_SERVER}"
    - "SERVICE_NAME=voter"
    - "SERVICE_TAGS=service"
    command: "java -Dspring.profiles.active=${ACTIVE_PROFILE} \
      -Dlogging.level.root=DEBUG \
      -Dserver.context-path=/voter
      -Djava.security.egd=file:/dev/./urandom \
      -jar voter/voter-service.jar"

  mongodb:
    image: mongo:latest
    command:
    - --smallfiles
    hostname: mongodb
    ports:
    - 27017:27017/tcp
    networks:
    - demo_overlay_net
    volumes:
    - demo_data_vol:/data/db
    logging:
      driver: fluentd
      options:
        tag: docker.{{.Name}}
        fluentd-address: localhost:24224
        labels: com.voter.environment,com.voter.active_profile
        env: SERVICE_NAME,SERVICE_TAGS
    labels:
      com.voter.environment: ${ENVIRONMENT}
      com.voter.active_profile: ${ACTIVE_PROFILE}
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.hostname == worker2
    environment:
    - "SERVICE_NAME=mongodb"
    - "SERVICE_TAGS=database"

  rabbitmq:
    image: rabbitmq:management-alpine
    hostname: rabbitmq
    ports:
    - 5672:5672/tcp
    - 15672:15672/tcp
    networks:
    - demo_overlay_net
    volumes:
    - demo_data_vol:/data/db
    logging:
      driver: fluentd
      options:
        tag: docker.{{.Name}}
        fluentd-address: localhost:24224
        labels: com.voter.environment,com.voter.active_profile
        env: SERVICE_NAME,SERVICE_TAGS
    labels:
      com.voter.environment: ${ENVIRONMENT}
      com.voter.active_profile: ${ACTIVE_PROFILE}
    deploy:
      replicas: 1
      placement:
        constraints:
        - node.hostname == worker3
    environment:
    - "SERVICE_NAME=rabbitmq"
    - "SERVICE_TAGS=messaging"

networks:
  demo_overlay_net:
    external: true

volumes:
  demo_data_vol:
    external: true
